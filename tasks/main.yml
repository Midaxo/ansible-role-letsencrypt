#- name: include OS-specific variables
#  include_vars: "{{ ansible_distribution }}.yml"
  
- include: "{{ ansible_os_family }}.yml"
  become: yes

- name: make directory
  file:
    path: "{{letsencrypt_directory}}"
    state: directory
    mode: 0777
  become: yes

- name: download certbot-auto
  get_url: 
    url: https://dl.eff.org/certbot-auto
    dest: "{{letsencrypt_directory}}"
    mode: 0755
  become: yes
  become_user: "{{letsencrypt_user}}"

- name: check if we have a 301 on nginx
  shell: 'if [ $(curl -s -o /dev/null -w \"%{http_code}\" http://localhost) != 301 ]; then echo "RELOAD"; fi'
  args:
    executable: /bin/bash
  register: nginx_up
  ignore_errors: yes

- name: if not, reload nginx
  shell: nginx -s reload
  when: nginx_up.stdout == "RELOAD"
  become: yes

- name: generate cert
  shell: "{{letsencrypt_directory}}/./certbot-auto -n certonly --server https://acme-v01.api.letsencrypt.org/directory -a webroot --webroot-path={{letsencrypt_directory}} --agree-tos --email {{letsencrypt_email}} {{letsencrypt_domainstring}}"
  become: yes
  become_user: "{{letsencrypt_user}}"

- name: setup cronjob
  cron:
    name: letsencrypt renew
    minute: '0'
    hour: '{{renew_hour}}'
    day: '*'
    state: present
    job: ./certbot-auto -n renew && sudo nginx -s reload
  become: yes
  become_user: "{{letsencrypt_user}}"